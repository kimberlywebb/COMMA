# Poster plots

library(dplyr)
library(ggplot2)

save_directory <- "C:/Users/kimho/Dropbox/Misclassification/Code/Mediation/simulation_studies/results/"

################################################################################
# Normal Y

# Low misclassification rate
load(paste0(save_directory, "s4_NormalY_LowMisclassification_Results.RData"))
s4_sim_results$Misclassification_Rate <- "Low"

# Medium misclassification rate
load(paste0(save_directory, "s5_NormalY_MedMisclassification_Results.RData"))
s5_sim_results$Misclassification_Rate <- "Medium"

# High misclassification rate
load(paste0(save_directory, "s6_NormalY_HighMisclassification_Results.RData"))
s6_sim_results$Misclassification_Rate <- "High"

NormalY_sim <- do.call("rbind", list(s4_sim_results,
                                     s5_sim_results,
                                     s6_sim_results))

NormalY_sim <- NormalY_sim %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, Misclassification_Rate, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates),
                rmse_estimate = sqrt(((mean(Estimates) - mean(True_Values))^2)
                                     + (sd(Estimates)^2)),
                   bias = mean(bias)) %>%
  ungroup()

NormalY_sim$misclassification <- factor(NormalY_sim$Misclassification_Rate,
                                        levels = c("Low", "Medium", "High"),
                                        labels = c("Low \n2-5%", "Medium \n7-10%",
                                          "High \n12-18%"))

save(NormalY_sim, file = paste0(save_directory, "NormalY_results_df.Rdata"))

NormalY_graph_data <- NormalY_sim %>%
  select(Method, misclassification, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias) %>%
  distinct

NormalY_graph_data$Jitter_RMSE <- ifelse(NormalY_graph_data$Method == "OLS" & 
                                           NormalY_graph_data$Parameter == "beta2",
                                         NormalY_graph_data$rmse_estimate + .005,
                                         NormalY_graph_data$rmse_estimate)

ggplot(NormalY_graph_data %>% filter(Parameter %in% c("beta2", "theta_x", "theta_m"))) +
  geom_line(aes(x = misclassification, y = Jitter_RMSE, color = Method,
                group = Method)) +
  geom_point(aes(x = misclassification, y = Jitter_RMSE, color = Method)) +
  facet_wrap(~Parameter) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_blank()) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#409DBE", "#ECA698")) +
  labs(x = "Mediator Misclassification Rate", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels with a Normal outcome",
          subtitle = "Estimates are obtained from three novel methods that account for misclassification in the mediator, and the naive method.")


################################################################################
# Binary Y

# Low misclassification rate
load(paste0(save_directory, "s1_BinaryY_LowMisclassification_Results.RData"))
s1_sim_results$Misclassification_Rate <- "Low"

# Medium misclassification rate
load(paste0(save_directory, "s2_BinaryY_MedMisclassification_Results.RData"))
s2_sim_results$Misclassification_Rate <- "Medium"

# High misclassification rate
load(paste0(save_directory, "s3_BinaryY_HighMisclassification_Results.RData"))
s3_sim_results$Misclassification_Rate <- "High"

BinaryY_sim <- do.call("rbind", list(s1_sim_results,
                                     s2_sim_results,
                                     s3_sim_results))

BinaryY_sim <- BinaryY_sim %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, Misclassification_Rate, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates),
                rmse_estimate = sqrt(((mean(Estimates) - mean(True_Values))^2)
                                     + (sd(Estimates)^2)),
                bias = mean(bias)) %>%
  ungroup()

BinaryY_sim$misclassification <- factor(BinaryY_sim$Misclassification_Rate,
                                        levels = c("Low", "Medium", "High"),
                                        labels = c("Low \n2-5%", "Medium \n7-10%",
                                                   "High \n12-18%"))

save(BinaryY_sim, file = paste0(save_directory, "BinaryY_results_df.Rdata"))

BinaryY_graph_data <- BinaryY_sim %>%
  select(Method, misclassification, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias) %>%
  distinct

ggplot(BinaryY_graph_data %>% filter(Parameter %in% c("beta2", "theta_x", "theta_m"))) +
  geom_line(aes(x = misclassification, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = misclassification, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_blank()) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "Mediator Misclassification Rate", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels with a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")

################################################################################
# Z \subset C, perfect specificity, rare outcome, varying prevalence of M

# Common M
load(paste0(save_directory, "s7_BinaryRareY_PS_CommonM_results1.RData"))
s7_sim_results1_df <- do.call("rbind", s7_sim_results1)
s7_sim_results1_df$Prevalence_M <- "Common"

load(paste0(save_directory, "s7_BinaryRareY_PS_CommonM_results2.RData"))
s7_sim_results2$Prevalence_M <- "Common"

load(paste0(save_directory, "s7_BinaryRareY_PS_CommonM_results3.RData"))
s7_sim_results3_df <- do.call("rbind", s7_sim_results3)
s7_sim_results3_df$Prevalence_M <- "Common"

s7_sim_results_df <- do.call("rbind", list(s7_sim_results1_df,
                                           s7_sim_results2,
                                           s7_sim_results3_df))

s7_sim_results_df$Sim <- rep(1:500, each = 57)

# Medium M
load(paste0(save_directory, "s8_BinaryRareY_PS_MedM_results.RData"))
s8_sim_results_df <- do.call("rbind", s8_sim_results)
s8_sim_results_df$Prevalence_M <- "Medium"

# Rare M
load(paste0(save_directory, "s9_BinaryRareY_PS_RareM_results.RData"))
s9_sim_results_df <- do.call("rbind", s9_sim_results)
s9_sim_results_df$Prevalence_M <- "Rare"

varyM_sim <- do.call("rbind", list(s7_sim_results_df,
                                   s8_sim_results_df,
                                   s9_sim_results_df))

varyM_sim$m <- factor(varyM_sim$Prevalence_M,
                                levels = c("Rare", "Medium", "Common"),
                                labels = c("P(M) = .10",
                                           "P(M) = .30",
                                           "P(M) = .50"))



varyM_sim <- varyM_sim%>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, m, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates, na.rm = TRUE),
                rmse_estimate = sqrt(((mean(Estimates, na.rm = TRUE) -
                                         mean(True_Values, na.rm = TRUE))^2)
                                     + (sd(Estimates, na.rm = TRUE)^2)),
                bias = mean(bias, na.rm = TRUE),
                n_NA = length(which(is.na(Estimates)))) %>%
  ungroup()

#save(BinaryY_sim, file = paste0(save_directory, "BinaryY_results_df.Rdata"))

varyM_graph_data <- varyM_sim %>%
  select(Method, m, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias, n_NA) %>%
  mutate(bias = round(bias, 3),
         rmse = round(rmse_estimate, 3)) %>%
  distinct

print(varyM_graph_data %>% filter(Method == "EM")
      %>% select(m, Parameter, mean_estimate,
                 rmse_estimate, True_Values, n_NA), n = 100)

varyM_graph_data_limited <- varyM_graph_data %>% filter(Parameter %in% c("beta2", "theta_x", "theta_m"))

varyM_graph_data_limited$Facet <- rep(c("beta[x]",  "theta[x]", "theta[m]"), 9)

ggplot(varyM_graph_data_limited) +
  geom_line(aes(x = m, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = rmse_estimate, color = Method)) +
  facet_wrap(~Facet, labeller = label_parsed) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")


ggplot(varyM_graph_data_limited) +
  geom_line(aes(x = m, y = abs(bias), color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = abs(bias), color = Method)) +
  facet_wrap(~Facet, labeller = label_parsed) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "Abs(Bias)", color = "Method") +
  ggtitle("Abs(Bias) for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")


ggplot(varyM_graph_data %>% filter(Parameter %in% c("beta1", "beta2", "beta3", "beta4", "beta5", "beta6", "beta7",
                                                    "gamma11", "gamma21", "gamma31",
                                                    "theta_0", "theta_c1", "theta_c2", "theta_c3", "theta_c4", "theta_c5",
                                                    "theta_m", "theta_x"))) +
  geom_line(aes(x = m, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter, scales = "free_y") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")


ggplot(varyM_sim %>% filter(Parameter %in% c("beta2"))) +
  geom_histogram(aes(x = Estimates, fill = Method,
                group = Method), position = "dodge") +
  facet_wrap(~m) +
  theme_minimal()

ggplot(varyM_sim %>% filter(Parameter %in% c("theta_x"))) +
  geom_histogram(aes(x = Estimates, fill = Method,
                     group = Method), position = "dodge") +
  facet_wrap(~m) +
  theme_minimal()

ggplot(varyM_sim %>% filter(Parameter %in% c("theta_m"))) +
  geom_histogram(aes(x = Estimates, fill = Method,
                     group = Method), position = "dodge") +
  facet_wrap(~m) +
  theme_minimal()

ggplot(varyM_sim %>% filter(Parameter %in% c("theta_m")) %>% filter(Method == "EM")) +
  geom_histogram(aes(x = Estimates, fill = Method,
                     group = Method), position = "dodge") +
  facet_wrap(~m) +
  theme_minimal()

ggplot(varyM_sim %>% filter(Parameter %in% c("theta_m")) %>% filter(Method == "PVW")) +
  geom_histogram(aes(x = Estimates, fill = Method,
                     group = Method), position = "dodge") +
  facet_wrap(~m) +
  theme_minimal()

print(varyM_sim %>%
  group_by(Parameter, m, Method) %>%
  summarise(est_sd = sd(Estimates, na.rm = TRUE),
            est_mean = mean(Estimates, na.rm = TRUE)), n = 200)

summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "PVW") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "EM") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "Naive") %>% select(Estimates))

summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "PVW" & Prevalence_M == "Rare") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "EM" & Prevalence_M == "Rare") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "Naive" & Prevalence_M == "Rare") %>% select(Estimates))

hist(varyM_sim$Estimates[which(varyM_sim$Parameter == "gamma21" & varyM_sim$Method == "PVW" & varyM_sim$Prevalence_M == "Rare")])
length(which(varyM_sim$Estimates[which(varyM_sim$Parameter == "gamma21" & varyM_sim$Method == "PVW" & varyM_sim$Prevalence_M == "Rare")] < -100))

pvw_rare_gamma21 <- varyM_sim[which(varyM_sim$Parameter == "gamma21" & varyM_sim$Method == "PVW" & varyM_sim$Prevalence_M == "Rare"),]

gamma_outliers <- pvw_rare_gamma21[which(pvw_rare_gamma21$Estimates < -10),]
gamma_outliers

summary(varyM_sim %>% filter(Parameter == "gamma21" & Method == "PVW" & Prevalence_M == "Rare") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "gamma21" & Method == "EM" & Prevalence_M == "Rare") %>% select(Estimates))

summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "PVW" & Prevalence_M == "Medium") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "EM" & Prevalence_M == "Medium") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "Naive" & Prevalence_M == "Medium") %>% select(Estimates))

length(which(varyM_sim$Estimates[which(varyM_sim$Parameter == "theta_m" & varyM_sim$Method == "PVW")] < -7))
# One outlier.

which(varyM_sim$Estimates[which(varyM_sim$Parameter == "theta_m" & varyM_sim$Method == "PVW")] < -7)

pvw_theta_m <- varyM_sim[which(varyM_sim$Parameter == "theta_m" & varyM_sim$Method == "PVW"),]
pvw_theta_m[951,]

sim451 <- varyM_sim[which(varyM_sim$Sim == 451 & varyM_sim$Parameter %in% c("beta2", "gamma11", "gamma21", "gamma31",
                                                                  "theta_x", "theta_m")), 
                c("Parameter", "Method", "m", "Estimates", "True_Values", "Convergence")]
sim451$Estimates = sim451$Estimates %>% round(3)

print(sim451, n = 500)

summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "PVW" & Prevalence_M == "Common") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "EM" & Prevalence_M == "Common") %>% select(Estimates))
summary(varyM_sim %>% filter(Parameter == "theta_m" & Method == "Naive" & Prevalence_M == "Common") %>% select(Estimates))

ggplot(varyM_sim %>% filter(Parameter %in% c("theta_m")) %>% filter(Method == "Naive")) +
  geom_histogram(aes(x = Estimates, fill = Method,
                     group = Method), position = "dodge") +
  facet_wrap(~m) +
  theme_minimal()


varyM_sim_no_outlier <- varyM_sim %>%
  filter(Sim != 451 & Sim != 92 & Sim != 267 & Sim != 488) %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, m, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates, na.rm = TRUE),
                rmse_estimate = sqrt(((mean(Estimates, na.rm = TRUE) -
                                         mean(True_Values, na.rm = TRUE))^2)
                                     + (sd(Estimates, na.rm = TRUE)^2)),
                bias = mean(bias, na.rm = TRUE),
                n_NA = length(which(is.na(Estimates)))) %>%
  ungroup()

varyM_graph_data_no_outlier <- varyM_sim_no_outlier %>%
  select(Method, m, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias, n_NA) %>%
  mutate(bias = round(bias, 3),
         rmse = round(rmse_estimate, 3)) %>%
  distinct

#varyM_graph_data_no_outlier$Facet <- rep(c("beta[x]",  "theta[x]", "theta[m]"), 9)

ggplot(varyM_graph_data_no_outlier %>% filter(Parameter %in% c("beta1", "beta2", "beta3", "beta4", "beta5", "beta6", "beta7",
                                                               "gamma11", "gamma21", "gamma31",
                                                               "theta_0", "theta_c1", "theta_c2", "theta_c3", "theta_c4", "theta_c5",
                                                               "theta_m", "theta_x"))) +
  geom_line(aes(x = m, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter, scales = "free") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")

ggplot(varyM_graph_data_no_outlier %>% filter(Parameter %in% c("beta1", "beta2", "beta3", "beta4", "beta5", "beta6", "beta7",
                                                               "gamma11", "gamma21", "gamma31",
                                                               "theta_0", "theta_c1", "theta_c2", "theta_c3", "theta_c4", "theta_c5",
                                                               "theta_m", "theta_x"))) +
  geom_line(aes(x = m, y = abs(bias), color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = abs(bias), color = Method)) +
  facet_wrap(~Parameter, scales = "free") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "Abs(bias)", color = "Method") +
  ggtitle("Abs(bias) for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")


################################################################################
# Z \subset C, perfect specificity, rare outcome, varying prevalence of M
## n = 20,000

# Common M
load(paste0(save_directory, "s7_BinaryRareY_PS_CommonM_n2k_results_sim300.RData"))
s7_sim_results1_n2k_df <- do.call("rbind", s7_sim_results3)
s7_sim_results1_n2k_df$Prevalence_M <- "Common"

load(paste0(save_directory, "s7_BinaryRareY_PS_CommonM_n2k_results_sim200.RData"))
s7_sim_results2_n2k_df <- do.call("rbind", s7_sim_results2)
s7_sim_results2_n2k_df$Prevalence_M <- "Common"

s7_sim_results_n2k_df <- do.call("rbind", list(s7_sim_results1_n2k_df,
                                           s7_sim_results2_n2k_df))

s7_sim_results_n2k_df$Sim <- rep(1:500, each = 57)

# Medium M
load(paste0(save_directory, "s8_BinaryRareY_PS_MedM_n2k_results.RData"))
s8_sim_results_n2k_df <- do.call("rbind", s8_sim_results_n2k)
s8_sim_results_n2k_df$Prevalence_M <- "Medium"

# Rare M
load(paste0(save_directory, "s9_BinaryRareY_PS_RareM_n2k_results.RData"))
s9_sim_results_n2k_df <- do.call("rbind", s9_sim_results_n2k)
s9_sim_results_n2k_df$Prevalence_M <- "Rare"

varyM_n2k_sim <- do.call("rbind", list(s7_sim_results_n2k_df,
                                   s8_sim_results_n2k_df,
                                   s9_sim_results_n2k_df))

varyM_n2k_sim$m <- factor(varyM_n2k_sim$Prevalence_M,
                      levels = c("Rare", "Medium", "Common"),
                      labels = c("P(M) = .10",
                                 "P(M) = .30",
                                 "P(M) = .50"))



varyM_n2k_sim <- varyM_n2k_sim %>%
  filter(Sim != 299) %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, m, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates, na.rm = TRUE),
                rmse_estimate = sqrt(((mean(Estimates, na.rm = TRUE) -
                                         mean(True_Values, na.rm = TRUE))^2)
                                     + (sd(Estimates, na.rm = TRUE)^2)),
                bias = mean(bias, na.rm = TRUE),
                n_NA = length(which(is.na(Estimates)))) %>%
  ungroup()

#save(BinaryY_sim, file = paste0(save_directory, "BinaryY_results_df.Rdata"))

varyM_n2k_graph_data <- varyM_n2k_sim %>%
  select(Method, m, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias, n_NA) %>%
  mutate(bias = round(bias, 3),
         rmse = round(rmse_estimate, 3)) %>%
  distinct

print(varyM_n2k_graph_data %>% filter(Method == "EM")
      %>% select(m, Parameter, mean_estimate,
                 rmse_estimate, True_Values, n_NA), n = 100)

varyM_n2k_graph_data_limited <- varyM_n2k_graph_data %>% filter(Parameter %in% c("beta2", "theta_x", "theta_m"))

varyM_n2k_graph_data_limited$Facet <- rep(c("beta[x]",  "theta[x]", "theta[m]"), 9)

ggplot(varyM_n2k_graph_data_limited) +
  geom_line(aes(x = m, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = rmse_estimate, color = Method)) +
  facet_wrap(~Facet, labeller = label_parsed) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for parameter estimates under three mediator prevalence levels - Setting 4",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")


ggplot(varyM_graph_data_limited) +
  geom_line(aes(x = m, y = abs(bias), color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = abs(bias), color = Method)) +
  facet_wrap(~Facet, labeller = label_parsed) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "Abs(Bias)", color = "Method") +
  ggtitle("Abs(Bias) for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")


ggplot(varyM_n2k_graph_data %>% filter(Parameter %in% c("beta1", "beta2", "beta3", "beta4", "beta5", "beta6", "beta7",
                                                    "gamma11", "gamma21", "gamma31",
                                                    "theta_0", "theta_c1", "theta_c2", "theta_c3", "theta_c4", "theta_c5",
                                                    "theta_m", "theta_x"))) +
  geom_line(aes(x = m, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = m, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter, scales = "free_y") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")



################################################################################
# Z \subset C, multiple sample sizes

# Small n
load(paste0(save_directory, "s10_ZsubC_n2000_results.RData"))
s10_sim_results_df <- do.call("rbind", s10_sim_results1)
s10_sim_results_df$N <- "2000"

# Medium n
load(paste0(save_directory, "s11_ZsubC_n5000_results.RData"))
s11_sim_results_df <- do.call("rbind", s11_sim_results)
s11_sim_results_df$N <- "5000"

# Large n
load(paste0(save_directory, "s12_ZsubC_n20000_results.RData"))
s12_sim_results_df <- do.call("rbind", s12_sim_results)
s12_sim_results_df$N <- "20000"

ZsubC_sim <- do.call("rbind", list(s10_sim_results_df,
                                   s11_sim_results_df,
                                   s12_sim_results_df))

ZsubC_sim$sample_size <- factor(ZsubC_sim$N,
                                  levels = c("2000", "5000", "20000"),
                                  labels = c("N = 2000", "N = 5000", "N = 20000"))



ZsubC_sim <- ZsubC_sim %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, sample_size, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates, na.rm = TRUE),
                rmse_estimate = sqrt(((mean(Estimates, na.rm = TRUE) -
                                         mean(True_Values, na.rm = TRUE))^2)
                                     + (sd(Estimates, na.rm = TRUE)^2)),
                bias = mean(bias, na.rm = TRUE),
                n_NA = length(which(is.na(Estimates)))) %>%
  ungroup()

#save(BinaryY_sim, file = paste0(save_directory, "BinaryY_results_df.Rdata"))

ZsubC_graph_data <- ZsubC_sim %>%
  select(Method, sample_size, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias, n_NA) %>%
  distinct

print(ZsubC_graph_data %>% filter(Method == "EM")
      %>% select(sample_size, Parameter, mean_estimate,
                 rmse_estimate, True_Values, n_NA), n = 100)

ggplot(ZsubC_graph_data) +
  geom_line(aes(x = sample_size, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = sample_size, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter, scales = "free") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")

################################################################################
# Z \subset C, perfect specificity, multiple sample sizes

# Small n
load(paste0(save_directory, "s13_ZsubC_PS_n2000_results.RData"))
s13_sim_results_df <- do.call("rbind", s13_sim_results)
s13_sim_results_df$N <- "2000"

# Medium n
load(paste0(save_directory, "s14_ZsubC_PS_n5000_results.RData"))
s14_sim_results_df <- do.call("rbind", s14_sim_results)
s14_sim_results_df$N <- "5000"

# Large n
load(paste0(save_directory, "s15_ZsubC_PS_n20000_results.RData"))
s15_sim_results_df <- do.call("rbind", s15_sim_results)
s15_sim_results_df$N <- "20000"

ZsubC_PS_sim <- do.call("rbind", list(s13_sim_results_df,
                                   s14_sim_results_df,
                                   s15_sim_results_df))

ZsubC_PS_sim$sample_size <- factor(ZsubC_PS_sim$N,
                                levels = c("2000", "5000", "20000"),
                                labels = c("N = 2000", "N = 5000", "N = 20000"))



ZsubC_PS_sim <- ZsubC_PS_sim %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, sample_size, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates, na.rm = TRUE),
                rmse_estimate = sqrt(((mean(Estimates, na.rm = TRUE) -
                                         mean(True_Values, na.rm = TRUE))^2)
                                     + (sd(Estimates, na.rm = TRUE)^2)),
                bias = mean(bias, na.rm = TRUE),
                n_NA = length(which(is.na(Estimates)))) %>%
  ungroup()

#save(BinaryY_sim, file = paste0(save_directory, "BinaryY_results_df.Rdata"))

ZsubC_PS_graph_data <- ZsubC_PS_sim %>%
  select(Method, sample_size, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias, n_NA) %>%
  distinct

print(ZsubC_PS_graph_data %>% filter(Method == "EM")
      %>% select(sample_size, Parameter, mean_estimate,
                 rmse_estimate, True_Values, n_NA), n = 100)


ggplot(ZsubC_PS_graph_data) +
  geom_line(aes(x = sample_size, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = sample_size, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter, scales = "free") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")

################################################################################
# Z not a subset of C, perfect specificity, multiple sample sizes

# Small n
load(paste0(save_directory, "s16_ZdiffC_PS_n2000_results.RData"))
s16_sim_results_df <- do.call("rbind", s16_sim_results)
s16_sim_results_df$N <- "2000"

# Medium n
load(paste0(save_directory, "s17_ZdiffC_PS_n5000_results.RData"))
s17_sim_results_df <- do.call("rbind", s17_sim_results)
s17_sim_results_df$N <- "5000"

# Large n
load(paste0(save_directory, "s18_ZdiffC_PS_n20000_results.RData"))
s18_sim_results_df <- do.call("rbind", s18_sim_results)
s18_sim_results_df$N <- "20000"

ZdiffC_PS_sim <- do.call("rbind", list(s16_sim_results_df,
                                      s17_sim_results_df,
                                      s18_sim_results_df))

ZdiffC_PS_sim$sample_size <- factor(ZdiffC_PS_sim$N,
                                   levels = c("2000", "5000", "20000"),
                                   labels = c("N = 2000", "N = 5000", "N = 20000"))



ZdiffC_PS_sim <- ZdiffC_PS_sim %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, sample_size, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates, na.rm = TRUE),
                rmse_estimate = sqrt(((mean(Estimates, na.rm = TRUE) -
                                         mean(True_Values, na.rm = TRUE))^2)
                                     + (sd(Estimates, na.rm = TRUE)^2)),
                bias = mean(bias, na.rm = TRUE),
                n_NA = length(which(is.na(Estimates)))) %>%
  ungroup()

#save(BinaryY_sim, file = paste0(save_directory, "BinaryY_results_df.Rdata"))

ZdiffC_PS_graph_data <- ZdiffC_PS_sim %>%
  select(Method, sample_size, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias, n_NA) %>%
  distinct

print(ZdiffC_PS_graph_data %>% filter(Method == "EM")
      %>% select(sample_size, Parameter, mean_estimate,
                 rmse_estimate, True_Values, n_NA), n = 100)

ggplot(ZdiffC_PS_graph_data) +
  geom_line(aes(x = sample_size, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = sample_size, y = rmse_estimate, color = Method)) +
  facet_wrap(~Parameter, scales = "free") +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "True Mediator Prevalence", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels \nwith a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")

################################################################################
# Binary Y with interaction

# Low misclassification rate
load(paste0(save_directory, "s19_BinaryY_LowMisclassification_XM_Results1.RData"))
s19_sim_results1$Misclassification_Rate <- "Low"

load(paste0(save_directory, "s19_BinaryY_LowMisclassification_XM_Results2.RData"))
s19_sim_results2$Misclassification_Rate <- "Low"

s19_sim_results <- rbind(s19_sim_results1, s19_sim_results2)

print(s19_sim_results %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, Parameter) %>%
  dplyr::summarise(mean_estimate = mean(Estimates),
                rmse_estimate = sqrt(((mean(Estimates) - mean(True_Values))^2)
                                     + (sd(Estimates)^2)),
                bias = mean(bias)) %>%
  ungroup(), n = 32)

# Medium misclassification rate
load(paste0(save_directory, "s20_BinaryY_MedMisclassification_XM_Results1.RData"))
s20_sim_results1$Misclassification_Rate <- "Medium"

load(paste0(save_directory, "s20_BinaryY_MedMisclassification_XM_Results2.RData"))
s20_sim_results2$Misclassification_Rate <- "Medium"

s20_sim_results <- rbind(s20_sim_results1, s20_sim_results2)

print(s20_sim_results %>%
        mutate(bias = Estimates - True_Values) %>%
        group_by(Method, Parameter) %>%
        dplyr::summarise(mean_estimate = mean(Estimates),
                         rmse_estimate = sqrt(((mean(Estimates) - mean(True_Values))^2)
                                              + (sd(Estimates)^2)),
                         bias = mean(bias)) %>%
        ungroup(), n = 32)

# High misclassification rate
load(paste0(save_directory, "s21_BinaryY_HighMisclassification_XM_Results1.RData"))
s21_sim_results1$Misclassification_Rate <- "High"

load(paste0(save_directory, "s21_BinaryY_HighMisclassification_XM_Results2.RData"))
s21_sim_results2$Misclassification_Rate <- "High"

s21_sim_results <- rbind(s21_sim_results1, s21_sim_results2)

print(s21_sim_results %>%
        mutate(bias = Estimates - True_Values) %>%
        group_by(Method, Parameter) %>%
        dplyr::summarise(mean_estimate = mean(Estimates),
                         rmse_estimate = sqrt(((mean(Estimates) - mean(True_Values))^2)
                                              + (sd(Estimates)^2)),
                         bias = mean(bias)) %>%
        ungroup(), n = 32)

BinaryY_XM_sim <- do.call("rbind", list(s19_sim_results,
                                     s20_sim_results,
                                     s21_sim_results))

BinaryY_XM_sim <- BinaryY_XM_sim %>%
  mutate(bias = Estimates - True_Values) %>%
  group_by(Method, Misclassification_Rate, Parameter) %>%
  dplyr::mutate(mean_estimate = mean(Estimates),
                rmse_estimate = sqrt(((mean(Estimates) - mean(True_Values))^2)
                                     + (sd(Estimates)^2)),
                bias = mean(bias)) %>%
  ungroup()

BinaryY_XM_sim$misclassification <- factor(BinaryY_XM_sim$Misclassification_Rate,
                                        levels = c("Low", "Medium", "High"),
                                        labels = c("Low \n2-5%", "Medium \n7-10%",
                                                   "High \n12-18%"))

save(BinaryY_XM_sim, file = paste0(save_directory, "BinaryY_XM_results_df.Rdata"))

BinaryY_XM_graph_data <- BinaryY_XM_sim %>%
  select(Method, misclassification, Parameter, mean_estimate, rmse_estimate,
         True_Values, bias) %>%
  distinct %>%
  filter(Parameter %in% c("beta2", "theta_x", "theta_m", "theta_xm"))

BinaryY_XM_graph_data$Greek_Parameter <- factor(BinaryY_XM_graph_data$Parameter,
                                                levels = c("beta2", "theta_x", "theta_m", "theta_xm"),
                                                labels = c("beta[2]",  "theta[x]", "theta[m]", "theta[xm]"))

BinaryY_XM_graph_data$Facet <- rep(c("beta[x]",  "theta[x]", "theta[m]", "theta[xm]"), 9)

ggplot(BinaryY_XM_graph_data) +
  geom_line(aes(x = misclassification, y = rmse_estimate, color = Method,
                group = Method)) +
  geom_point(aes(x = misclassification, y = rmse_estimate, color = Method)) +
  facet_wrap(~Facet, labeller = label_parsed) +
  theme_minimal() +
  theme(
    strip.background = element_blank(),
    strip.text.x = element_text(size = 16)) +
  theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 2, face = "plain"),
        axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),  
        axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
        axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = 1.5, face = "plain"),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 12)) +
  theme(plot.title = element_text(size = 16, face = "bold")) +
  theme(plot.subtitle = element_text(size = 12)) +
  scale_color_manual(values = c("#DA86A5", "#785E95", "#ECA698")) +
  labs(x = "Mediator Misclassification Rate", y = "RMSE", color = "Method") +
  ggtitle("RMSE for association parameter estimates under three mediator misclassification levels with a Bernoulli outcome",
          subtitle = "Estimates are obtained from two novel methods that account for misclassification in the mediator, and the naive method.")

