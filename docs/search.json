[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kimberly Webb. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Webb K (2024). COMMA: Correcting Misclassified Mediation Analysis. R package version 1.0.0.","code":"@Manual{,   title = {COMMA: Correcting Misclassified Mediation Analysis},   author = {Kimberly Webb},   year = {2024},   note = {R package version 1.0.0}, }"},{"path":"/index.html","id":"comma","dir":"","previous_headings":"","what":"Correcting Misclassified Mediation Analysis","title":"Correcting Misclassified Mediation Analysis","text":"COMMA: COrrecting Misclassified Mediation Analysis","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Correcting Misclassified Mediation Analysis","text":"COMMA provides set functions analysis mediation models binary mediator misclassification. two main parts : Classification probability calculations Parameter estimation","code":""},{"path":"/index.html","id":"classification-probability-calculations","dir":"","previous_headings":"","what":"Classification probability calculations","title":"Correcting Misclassified Mediation Analysis","text":"package allows users compute probability latent true mediators conditional probability observing mediator value given latent true mediator, based parameters estimated COMMA_EM COMMA_PVW functions.","code":""},{"path":"/index.html","id":"parameter-estimation","dir":"","previous_headings":"","what":"Parameter estimation","title":"Correcting Misclassified Mediation Analysis","text":"Jointly estimate parameters true outcome observation mechanisms, respectively, binary outcome misclassification model using EM algorithm MCMC. Parameters true outcome, first-stage observation, second-stage observation mechanisms two-stage binary outcome misclassification model can also estimated using EM algorithm MCMC.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Correcting Misclassified Mediation Analysis","text":"","code":"# Install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"kimberlywebb/COMMA\")"},{"path":"/reference/COMBO_EM_algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"EM-Algorithm Estimation of the Binary Outcome Misclassification Model — COMBO_EM_algorithm","title":"EM-Algorithm Estimation of the Binary Outcome Misclassification Model — COMBO_EM_algorithm","text":"Jointly estimate \\(\\beta\\) \\(\\gamma\\) parameters true outcome observation mechanisms, respectively, binary outcome misclassification model.","code":""},{"path":"/reference/COMBO_EM_algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM-Algorithm Estimation of the Binary Outcome Misclassification Model — COMBO_EM_algorithm","text":"","code":"COMBO_EM_algorithm(   Ystar,   x_matrix,   z_matrix,   beta_start,   gamma_start,   tolerance = 1e-07,   max_em_iterations = 1500,   em_method = \"squarem\" )"},{"path":"/reference/COMBO_EM_algorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM-Algorithm Estimation of the Binary Outcome Misclassification Model — COMBO_EM_algorithm","text":"Ystar numeric vector indicator variables (1, 2) observed outcome Y*. NA terms. reference category 2. x_matrix numeric matrix covariates true outcome mechanism. x_matrix contain intercept values NA. z_matrix numeric matrix covariates observation mechanism. z_matrix contain intercept values NA. beta_start numeric vector column matrix starting values \\(\\beta\\) parameters true outcome mechanism. number elements beta_start equal number columns x_matrix plus 1. gamma_start numeric vector matrix starting values \\(\\gamma\\) parameters observation mechanism. matrix form, gamma_start matrix rows correspond parameters Y* = 1 observed outcome, dimensions z_matrix plus 1, gamma parameter matrix columns correspond true outcome categories \\(Y \\\\{1, 2\\}\\). numeric vector gamma_start obtained concatenating gamma matrix, .e. gamma_start <- c(gamma_matrix). tolerance numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. max_em_iterations integer specifying maximum number iterations EM algorithm. default 1500. em_method character string specifying EM algorithm applied. Options \"em\", \"squarem\", \"pem\". default recommended option \"squarem\".","code":""},{"path":"/reference/COMBO_EM_algorithm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM-Algorithm Estimation of the Binary Outcome Misclassification Model — COMBO_EM_algorithm","text":"COMBO_EM_algorithm returns data frame containing four columns. first column, Parameter, represents unique parameter value row. next column contains parameter Estimates, followed standard error estimates, SE. final column, Convergence, reports whether algorithm converged given parameter estimate.","code":""},{"path":"/reference/COMBO_EM_algorithm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EM-Algorithm Estimation of the Binary Outcome Misclassification Model — COMBO_EM_algorithm","text":"","code":"if (FALSE) { set.seed(123) n <- 1000 x_mu <- 0 x_sigma <- 1 z_shape <- 1  true_beta <- matrix(c(1, -2), ncol = 1) true_gamma <- matrix(c(.5, 1, -.5, -1), nrow = 2, byrow = FALSE)  x_matrix = matrix(rnorm(n, x_mu, x_sigma), ncol = 1) X = matrix(c(rep(1, n), x_matrix[,1]), ncol = 2, byrow = FALSE) z_matrix = matrix(rgamma(n, z_shape), ncol = 1) Z = matrix(c(rep(1, n), z_matrix[,1]), ncol = 2, byrow = FALSE)  exp_xb = exp(X %*% true_beta) pi_result = exp_xb[,1] / (exp_xb[,1] + 1) pi_matrix = matrix(c(pi_result, 1 - pi_result), ncol = 2, byrow = FALSE)  true_Y <- rep(NA, n) for(i in 1:n){     true_Y[i] = which(stats::rmultinom(1, 1, pi_matrix[i,]) == 1) }  exp_zg = exp(Z %*% true_gamma) pistar_denominator = matrix(c(1 + exp_zg[,1], 1 + exp_zg[,2]), ncol = 2, byrow = FALSE) pistar_result = exp_zg / pistar_denominator  pistar_matrix = matrix(c(pistar_result[,1], 1 - pistar_result[,1],                          pistar_result[,2], 1 - pistar_result[,2]),                        ncol = 2, byrow = FALSE)  obs_Y <- rep(NA, n) for(i in 1:n){     true_j = true_Y[i]     obs_Y[i] = which(rmultinom(1, 1,                      pistar_matrix[c(i, n + i),                                      true_j]) == 1)  }  Ystar <- obs_Y  starting_values <- rep(1,6) beta_start <- matrix(starting_values[1:2], ncol = 1) gamma_start <- matrix(starting_values[3:6], ncol = 2, nrow = 2, byrow = FALSE)  EM_results <- COMBO_EM_algorithm(Ystar = Ystar,                                  x_matrix = x_matrix, z_matrix = z_matrix,                                  beta_start = beta_start,                                  gamma_start = gamma_start)  EM_results}"},{"path":"/reference/COMBO_EM_function.html","id":null,"dir":"Reference","previous_headings":"","what":"EM-Algorithm Function for Estimation of the Misclassification Model — COMBO_EM_function","title":"EM-Algorithm Function for Estimation of the Misclassification Model — COMBO_EM_function","text":"EM-Algorithm Function Estimation Misclassification Model","code":""},{"path":"/reference/COMBO_EM_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM-Algorithm Function for Estimation of the Misclassification Model — COMBO_EM_function","text":"","code":"COMBO_EM_function(param_current, obs_Y_matrix, X, Z, sample_size, n_cat)"},{"path":"/reference/COMBO_EM_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM-Algorithm Function for Estimation of the Misclassification Model — COMBO_EM_function","text":"param_current numeric vector regression parameters, order \\(\\beta, \\gamma\\). \\(\\gamma\\) vector obtained matrix form. matrix form, gamma parameter matrix rows correspond parameters Y* = 1 observed outcome, dimensions Z. matrix form, gamma parameter matrix columns correspond true outcome categories \\(j = 1, \\dots,\\) n_cat. numeric vector gamma_v obtained concatenating gamma matrix, .e. gamma_v <- c(gamma_matrix). obs_Y_matrix numeric matrix indicator variables (0, 1) observed outcome Y*. Rows matrix correspond subject. Columns matrix correspond observed outcome category. row contain exactly one 0 entry exactly one 1 entry. X numeric design matrix true outcome mechanism. Z numeric design matrix observation mechanism. sample_size integer value specifying number observations sample. value equal number rows design matrix, X Z. n_cat number categorical values true outcome, Y, observed outcome, Y* can take.","code":""},{"path":"/reference/COMBO_EM_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM-Algorithm Function for Estimation of the Misclassification Model — COMBO_EM_function","text":"COMBO_EM_function returns numeric vector updated parameter estimates one iteration EM-algorithm.","code":""},{"path":"/reference/COMBO_weight.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute E-step for Binary Outcome Misclassification Model Estimated With the EM-Algorithm — COMBO_weight","title":"Compute E-step for Binary Outcome Misclassification Model Estimated With the EM-Algorithm — COMBO_weight","text":"Compute E-step Binary Outcome Misclassification Model Estimated EM-Algorithm","code":""},{"path":"/reference/COMBO_weight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute E-step for Binary Outcome Misclassification Model Estimated With the EM-Algorithm — COMBO_weight","text":"","code":"COMBO_weight(ystar_matrix, pistar_matrix, pi_matrix, sample_size, n_cat)"},{"path":"/reference/COMBO_weight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute E-step for Binary Outcome Misclassification Model Estimated With the EM-Algorithm — COMBO_weight","text":"ystar_matrix numeric matrix indicator variables (0, 1) observed outcome Y*. Rows matrix correspond subject. Columns matrix correspond observed outcome category. row contain exactly one 0 entry exactly one 1 entry. pistar_matrix numeric matrix conditional probabilities obtained internal function pistar_compute. Rows matrix correspond subject observed outcome category. Columns matrix correspond true, latent outcome category. pi_matrix numeric matrix probabilities obtained internal function pi_compute. Rows matrix correspond subject. Columns matrix correspond true, latent outcome category. sample_size integer value specifying number observations sample. value equal number rows observed outcome matrix, ystar_matrix. n_cat number categorical values true outcome, Y, observed outcome, Y*, can take.","code":""},{"path":"/reference/COMBO_weight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute E-step for Binary Outcome Misclassification Model Estimated With the EM-Algorithm — COMBO_weight","text":"COMBO_weight returns matrix E-step weights EM-algorithm, computed follows: \\(\\sum_{k = 1}^2 \\frac{y^*_{ik} \\pi^*_{ikj} \\pi_{ij}}{\\sum_{\\ell = 1}^2 \\pi^*_{k \\ell} \\pi_{\\ell}}\\). Rows matrix correspond subject. Columns matrix correspond true outcome categories \\(j = 1, \\dots,\\)  n_cat.","code":""},{"path":"/reference/COMMA_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Data to use in COMMA Functions — COMMA_data","title":"Generate Data to use in COMMA Functions — COMMA_data","text":"Generate Data use COMMA Functions","code":""},{"path":"/reference/COMMA_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Data to use in COMMA Functions — COMMA_data","text":"","code":"COMMA_data(   sample_size,   x_mu,   x_sigma,   z_shape,   c_shape,   interaction_indicator,   outcome_distribution,   true_beta,   true_gamma,   true_theta )"},{"path":"/reference/COMMA_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Data to use in COMMA Functions — COMMA_data","text":"sample_size integer specifying sample size generated data set. x_mu numeric value specifying mean x predictors generated Normal distribution. x_sigma positive numeric value specifying standard deviation x predictors generated Normal distribution. z_shape positive numeric value specifying shape parameter z predictors generated Gamma distribution. c_shape positive numeric value specifying shape parameter c covariates generated Gamma distribution. interaction_indicator logical value indicating interaction x m used generate outcome variable, y. outcome_distribution character string specifying distribution outcome variable. Options \"Bernoulli\" \"Normal\". true_beta column matrix \\(\\beta\\) parameter values (intercept, slope) generate data true mediator mechanism. true_gamma numeric matrix \\(\\gamma\\) parameters generate data observed mediator mechanisms. matrix form, gamma matrix rows correspond intercept (row 1) slope (row 2) terms. gamma parameter matrix columns correspond true mediator categories \\(M \\\\{1, 2\\}\\). true_theta column matrix \\(\\theta\\) parameter values (intercept, slope) generate data outcome mechanism.","code":""},{"path":"/reference/COMMA_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Data to use in COMMA Functions — COMMA_data","text":"COMMA_data returns list generated data elements: obs_mediator vector observed mediator values. true_mediator vector true mediator values. outcome vector outcome values. x vector generated predictor values true mediator mechanism, Normal distribution. z vector generated predictor values observed mediator mechanism Gamma distribution. c vector generated covariates. x_design_matrix design matrix x predictor. z_design_matrix design matrix z predictor. c_design_matrix design matrix c predictor.","code":""},{"path":"/reference/COMMA_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Data to use in COMMA Functions — COMMA_data","text":"","code":"if (FALSE) { sample_size <- 10000  n_cat <- 2 # Number of categories in the binary mediator  # Data generation settings x_mu <- 0 x_sigma <- 1 z_shape <- 1 c_shape <- 1  # True parameter values (gamma terms set the misclassification rate) true_beta <- matrix(c(1, -2, .5), ncol = 1) true_gamma <- matrix(c(1, 1, -.5, -1.5), nrow = 2, byrow = FALSE) true_theta <- matrix(c(1, 1.5, -2, -.2), ncol = 1)  example_data <- COMMA_data(sample_size, x_mu, x_sigma, z_shape, c_shape,                            interaction_indicator = FALSE,                            outcome_distribution = \"Bernoulli\",                            true_beta, true_gamma, true_theta) }"},{"path":"/reference/COMMA_EM.html","id":null,"dir":"Reference","previous_headings":"","what":"EM Algorithm Estimation of the Binary Mediator Misclassification Model — COMMA_EM","title":"EM Algorithm Estimation of the Binary Mediator Misclassification Model — COMMA_EM","text":"Jointly estimate \\(\\beta\\), \\(\\gamma\\), \\(\\theta\\) parameters true mediator, observed mediator, outcome mechanisms, respectively, binary mediator misclassification model.","code":""},{"path":"/reference/COMMA_EM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM Algorithm Estimation of the Binary Mediator Misclassification Model — COMMA_EM","text":"","code":"COMMA_EM(   Mstar,   outcome,   outcome_distribution,   interaction_indicator,   x_matrix,   z_matrix,   c_matrix,   beta_start,   gamma_start,   theta_start,   sigma_start = NULL,   tolerance = 1e-07,   max_em_iterations = 1500,   em_method = \"squarem\" )"},{"path":"/reference/COMMA_EM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM Algorithm Estimation of the Binary Mediator Misclassification Model — COMMA_EM","text":"Mstar numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. outcome vector containing outcome variables interest. NA terms. outcome_distribution character string specifying distribution outcome variable. Options \"Bernoulli\" \"Normal\". interaction_indicator logical value indicating interaction x m used generate outcome variable, y. x_matrix numeric matrix predictors true mediator outcome mechanisms. x_matrix contain intercept values NA. z_matrix numeric matrix covariates observation mechanism. z_matrix contain intercept values NA. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. beta_start numeric vector column matrix starting values \\(\\beta\\) parameters true mediator mechanism. number elements beta_start equal number columns x_matrix c_matrix plus 1. gamma_start numeric vector matrix starting values \\(\\gamma\\) parameters observation mechanism. matrix form, gamma_start matrix rows correspond parameters M* = 1 observed mediator, dimensions z_matrix plus 1, gamma parameter matrix columns correspond true mediator categories \\(Y \\\\{1, 2\\}\\). numeric vector gamma_start obtained concatenating gamma matrix, .e. gamma_start <- c(gamma_matrix). theta_start numeric vector column matrix starting values \\(\\theta\\) parameters outcome mechanism. number elements theta_start equal number columns x_matrix c_matrix plus 2 (interaction_indicator FALSE) 3 (interaction_indicator TRUE). sigma_start numeric value specifying starting value standard deviation. value required outcome_distribution \"Normal\". Otherwise, value set NULL. tolerance numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. max_em_iterations numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. em_method character string specifying EM algorithm applied. Options \"em\", \"squarem\", \"pem\". default recommended option \"squarem\".","code":""},{"path":"/reference/COMMA_EM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM Algorithm Estimation of the Binary Mediator Misclassification Model — COMMA_EM","text":"COMMA_EM returns data frame containing four columns. first column, Parameter, represents unique parameter value row. next column contains parameter Estimates, followed standard error estimates, SE. final column, Convergence, reports whether algorithm converged given parameter estimate.","code":""},{"path":"/reference/COMMA_EM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EM Algorithm Estimation of the Binary Mediator Misclassification Model — COMMA_EM","text":"","code":"if (FALSE) { sample_size <- 10000  n_cat <- 2 # Number of categories in the binary mediator  # Data generation settings x_mu <- 0 x_sigma <- 1 z_shape <- 1 c_shape <- 1  # True parameter values (gamma terms set the misclassification rate) true_beta <- matrix(c(1, -2, .5), ncol = 1) true_gamma <- matrix(c(1, 1, -.5, -1.5), nrow = 2, byrow = FALSE) true_theta <- matrix(c(1, 1.5, -2, -.2), ncol = 1)  example_data <- COMMA_data(sample_size, x_mu, x_sigma, z_shape, c_shape,                            interaction_indicator = FALSE,                            outcome_distribution = \"Bernoulli\",                            true_beta, true_gamma, true_theta)                             beta_start <- matrix(rep(1, 3), ncol = 1) gamma_start <- matrix(rep(1, 4), nrow = 2, ncol = 2) theta_start <- matrix(rep(1, 4), ncol = 1)  Mstar = example_data[[\"obs_mediator\"]] outcome = example_data[[\"outcome\"]] x_matrix = example_data[[\"x\"]] z_matrix = example_data[[\"z\"]] c_matrix = example_data[[\"c\"]]                             EM_results <- COMMA_EM(Mstar, outcome, \"Bernoulli\", FALSE,                        x_matrix, z_matrix, c_matrix,                        beta_start, gamma_start, theta_start) }"},{"path":"/reference/COMMA_OLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","title":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","text":"Estimate \\(\\beta\\), \\(\\gamma\\), \\(\\theta\\) parameters true mediator, observed mediator, outcome mechanisms, respectively, binary mediator misclassification model using ordinary least squares correction.","code":""},{"path":"/reference/COMMA_OLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","text":"","code":"COMMA_OLS(   Mstar,   outcome,   x_matrix,   z_matrix,   c_matrix,   beta_start,   gamma_start,   theta_start,   tolerance = 1e-07,   max_em_iterations = 1500,   em_method = \"squarem\" )"},{"path":"/reference/COMMA_OLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","text":"Mstar numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. outcome vector containing outcome variables interest. NA terms. x_matrix numeric matrix predictors true mediator outcome mechanisms. x_matrix contain intercept values NA. z_matrix numeric matrix covariates observation mechanism. z_matrix contain intercept values NA. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. beta_start numeric vector column matrix starting values \\(\\beta\\) parameters true mediator mechanism. number elements beta_start equal number columns x_matrix c_matrix plus 1. gamma_start numeric vector matrix starting values \\(\\gamma\\) parameters observation mechanism. matrix form, gamma_start matrix rows correspond parameters M* = 1 observed mediator, dimensions z_matrix plus 1, gamma parameter matrix columns correspond true mediator categories \\(Y \\\\{1, 2\\}\\). numeric vector gamma_start obtained concatenating gamma matrix, .e. gamma_start <- c(gamma_matrix). theta_start numeric vector column matrix starting values \\(\\theta\\) parameters outcome mechanism. number elements theta_start equal number columns x_matrix c_matrix plus 2 (interaction_indicator FALSE) 3 (interaction_indicator TRUE). tolerance numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. max_em_iterations numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. em_method character string specifying EM algorithm applied. Options \"em\", \"squarem\", \"pem\". default recommended option \"squarem\".","code":""},{"path":"/reference/COMMA_OLS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","text":"COMMA_PVW returns data frame containing four columns. first column, Parameter, represents unique parameter value row. next column contains parameter Estimates. third column, Convergence, reports whether algorithm converged given parameter estimate. final column, Method, reports estimates obtained \"PVW\" procedure.","code":""},{"path":"/reference/COMMA_OLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","text":"Note method can used Normal outcome models.","code":""},{"path":"/reference/COMMA_OLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordinary Least Squares Estimation of the Binary Mediator Misclassification Model — COMMA_OLS","text":"","code":"if (FALSE) { sample_size <- 10000  n_cat <- 2 # Number of categories in the binary mediator  # Data generation settings x_mu <- 0 x_sigma <- 1 z_shape <- 1 c_shape <- 1  # True parameter values (gamma terms set the misclassification rate) true_beta <- matrix(c(1, -2, .5), ncol = 1) true_gamma <- matrix(c(1, 1, -.5, -1.5), nrow = 2, byrow = FALSE) true_theta <- matrix(c(1, 1.5, -2, -.2), ncol = 1)  example_data <- COMMA_data(sample_size, x_mu, x_sigma, z_shape, c_shape,                            interaction_indicator = FALSE,                            outcome_distribution = \"Normal\",                            true_beta, true_gamma, true_theta)                             beta_start <- matrix(rep(1, 3), ncol = 1) gamma_start <- matrix(rep(1, 4), nrow = 2, ncol = 2) theta_start <- matrix(rep(1, 4), ncol = 1)  Mstar = example_data[[\"obs_mediator\"]] outcome = example_data[[\"outcome\"]] x_matrix = example_data[[\"x\"]] z_matrix = example_data[[\"z\"]] c_matrix = example_data[[\"c\"]]                             EM_results <- COMMA_PVW(Mstar, outcome, FALSE,                          x_matrix, z_matrix, c_matrix,                         beta_start, gamma_start, theta_start) }"},{"path":"/reference/COMMA_PVW.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","title":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","text":"Estimate \\(\\beta\\), \\(\\gamma\\), \\(\\theta\\) parameters true mediator, observed mediator, outcome mechanisms, respectively, binary mediator misclassification model using predictive value weighting approach.","code":""},{"path":"/reference/COMMA_PVW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","text":"","code":"COMMA_PVW(   Mstar,   outcome,   interaction_indicator,   x_matrix,   z_matrix,   c_matrix,   beta_start,   gamma_start,   theta_start,   tolerance = 1e-07,   max_em_iterations = 1500,   em_method = \"squarem\" )"},{"path":"/reference/COMMA_PVW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","text":"Mstar numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. outcome vector containing outcome variables interest. NA terms. interaction_indicator logical value indicating interaction x m used generate outcome variable, y. x_matrix numeric matrix predictors true mediator outcome mechanisms. x_matrix contain intercept values NA. z_matrix numeric matrix covariates observation mechanism. z_matrix contain intercept values NA. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. beta_start numeric vector column matrix starting values \\(\\beta\\) parameters true mediator mechanism. number elements beta_start equal number columns x_matrix c_matrix plus 1. gamma_start numeric vector matrix starting values \\(\\gamma\\) parameters observation mechanism. matrix form, gamma_start matrix rows correspond parameters M* = 1 observed mediator, dimensions z_matrix plus 1, gamma parameter matrix columns correspond true mediator categories \\(Y \\\\{1, 2\\}\\). numeric vector gamma_start obtained concatenating gamma matrix, .e. gamma_start <- c(gamma_matrix). theta_start numeric vector column matrix starting values \\(\\theta\\) parameters outcome mechanism. number elements theta_start equal number columns x_matrix c_matrix plus 2 (interaction_indicator FALSE) 3 (interaction_indicator TRUE). tolerance numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. max_em_iterations numeric value specifying stop estimation, based difference subsequent log-likelihood estimates. default 1e-7. em_method character string specifying EM algorithm applied. Options \"em\", \"squarem\", \"pem\". default recommended option \"squarem\".","code":""},{"path":"/reference/COMMA_PVW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","text":"COMMA_PVW returns data frame containing four columns. first column, Parameter, represents unique parameter value row. next column contains parameter Estimates. third column, Convergence, reports whether algorithm converged given parameter estimate. final column, Method, reports estimates obtained \"PVW\" procedure.","code":""},{"path":"/reference/COMMA_PVW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","text":"Note method can used binary outcome models.","code":""},{"path":"/reference/COMMA_PVW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictive Value Weighting Estimation of the Binary Mediator Misclassification Model — COMMA_PVW","text":"","code":"if (FALSE) { sample_size <- 10000  n_cat <- 2 # Number of categories in the binary mediator  # Data generation settings x_mu <- 0 x_sigma <- 1 z_shape <- 1 c_shape <- 1  # True parameter values (gamma terms set the misclassification rate) true_beta <- matrix(c(1, -2, .5), ncol = 1) true_gamma <- matrix(c(1, 1, -.5, -1.5), nrow = 2, byrow = FALSE) true_theta <- matrix(c(1, 1.5, -2, -.2), ncol = 1)  example_data <- COMMA_data(sample_size, x_mu, x_sigma, z_shape, c_shape,                            interaction_indicator = FALSE,                            outcome_distribution = \"Bernoulli\",                            true_beta, true_gamma, true_theta)                             beta_start <- matrix(rep(1, 3), ncol = 1) gamma_start <- matrix(rep(1, 4), nrow = 2, ncol = 2) theta_start <- matrix(rep(1, 4), ncol = 1)  Mstar = example_data[[\"obs_mediator\"]] outcome = example_data[[\"outcome\"]] x_matrix = example_data[[\"x\"]] z_matrix = example_data[[\"z\"]] c_matrix = example_data[[\"c\"]]                             EM_results <- COMMA_PVW(Mstar, outcome, FALSE,                          x_matrix, z_matrix, c_matrix,                         beta_start, gamma_start, theta_start) }"},{"path":"/reference/EM_function_bernoulliY.html","id":null,"dir":"Reference","previous_headings":"","what":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY","text":"Function cases \\(Y \\sim Bernoulli\\) interaction term outcome mechanism.","code":""},{"path":"/reference/EM_function_bernoulliY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY","text":"","code":"EM_function_bernoulliY(   param_current,   obs_mediator,   obs_outcome,   X,   Z,   c_matrix,   sample_size,   n_cat )"},{"path":"/reference/EM_function_bernoulliY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY","text":"param_current numeric vector regression parameters, order \\(\\beta, \\gamma, \\theta\\). \\(\\gamma\\) vector obtained matrix form. matrix form, gamma parameter matrix rows correspond parameters M* = 1 observed mediator, dimensions Z. matrix form, gamma parameter matrix columns correspond true mediator categories \\(j = 1, \\dots,\\) n_cat. numeric vector gamma_v obtained concatenating gamma matrix, .e. gamma_v <- c(gamma_matrix). obs_mediator numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. obs_outcome vector containing outcome variables interest. NA terms. X numeric design matrix true mediator mechanism. Z numeric design matrix observation mechanism. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. sample_size integer value specifying number observations sample. value equal number rows design matrix, X Z. n_cat number categorical values true outcome, M, observed outcome, M* can take.","code":""},{"path":"/reference/EM_function_bernoulliY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY","text":"EM_function_bernoulliY returns numeric vector updated parameter estimates one iteration EM-algorithm.","code":""},{"path":"/reference/EM_function_bernoulliY_XM.html","id":null,"dir":"Reference","previous_headings":"","what":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY_XM","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY_XM","text":"Function cases \\(Y \\sim Bernoulli\\) interaction term outcome mechanism.","code":""},{"path":"/reference/EM_function_bernoulliY_XM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY_XM","text":"","code":"EM_function_bernoulliY_XM(   param_current,   obs_mediator,   obs_outcome,   X,   Z,   c_matrix,   sample_size,   n_cat )"},{"path":"/reference/EM_function_bernoulliY_XM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY_XM","text":"param_current numeric vector regression parameters, order \\(\\beta, \\gamma, \\theta\\). \\(\\gamma\\) vector obtained matrix form. matrix form, gamma parameter matrix rows correspond parameters M* = 1 observed mediator, dimensions Z. matrix form, gamma parameter matrix columns correspond true mediator categories \\(j = 1, \\dots,\\) n_cat. numeric vector gamma_v obtained concatenating gamma matrix, .e. gamma_v <- c(gamma_matrix). obs_mediator numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. obs_outcome vector containing outcome variables interest. NA terms. X numeric design matrix true mediator mechanism. Z numeric design matrix observation mechanism. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. sample_size integer value specifying number observations sample. value equal number rows design matrix, X Z. n_cat number categorical values true outcome, M, observed outcome, M* can take.","code":""},{"path":"/reference/EM_function_bernoulliY_XM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_bernoulliY_XM","text":"EM_function_bernoulliY returns numeric vector updated parameter estimates one iteration EM-algorithm.","code":""},{"path":"/reference/EM_function_normalY.html","id":null,"dir":"Reference","previous_headings":"","what":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY","text":"Function cases \\(Y \\sim Normal\\) interaction term outcome mechanism.","code":""},{"path":"/reference/EM_function_normalY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY","text":"","code":"EM_function_normalY(   param_current,   obs_mediator,   obs_outcome,   X,   Z,   c_matrix,   sample_size,   n_cat )"},{"path":"/reference/EM_function_normalY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY","text":"param_current numeric vector regression parameters, order \\(\\beta, \\gamma, \\theta\\). \\(\\gamma\\) vector obtained matrix form. matrix form, gamma parameter matrix rows correspond parameters M* = 1 observed mediator, dimensions Z. matrix form, gamma parameter matrix columns correspond true mediator categories \\(j = 1, \\dots,\\) n_cat. numeric vector gamma_v obtained concatenating gamma matrix, .e. gamma_v <- c(gamma_matrix). obs_mediator numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. obs_outcome vector containing outcome variables interest. NA terms. X numeric design matrix true mediator mechanism. Z numeric design matrix observation mechanism. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. sample_size integer value specifying number observations sample. value equal number rows design matrix, X Z. n_cat number categorical values true outcome, M, observed outcome, M* can take.","code":""},{"path":"/reference/EM_function_normalY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY","text":"EM_function_bernoulliY returns numeric vector updated parameter estimates one iteration EM-algorithm.","code":""},{"path":"/reference/EM_function_normalY_XM.html","id":null,"dir":"Reference","previous_headings":"","what":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY_XM","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY_XM","text":"Function cases \\(Y \\sim Normal\\) interaction term outcome mechanism.","code":""},{"path":"/reference/EM_function_normalY_XM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY_XM","text":"","code":"EM_function_normalY_XM(   param_current,   obs_mediator,   obs_outcome,   X,   Z,   c_matrix,   sample_size,   n_cat )"},{"path":"/reference/EM_function_normalY_XM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY_XM","text":"param_current numeric vector regression parameters, order \\(\\beta, \\gamma, \\theta\\). \\(\\gamma\\) vector obtained matrix form. matrix form, gamma parameter matrix rows correspond parameters M* = 1 observed mediator, dimensions Z. matrix form, gamma parameter matrix columns correspond true mediator categories \\(j = 1, \\dots,\\) n_cat. numeric vector gamma_v obtained concatenating gamma matrix, .e. gamma_v <- c(gamma_matrix). obs_mediator numeric vector indicator variables (1, 2) observed mediator M*. NA terms. reference category 2. obs_outcome vector containing outcome variables interest. NA terms. X numeric design matrix true mediator mechanism. Z numeric design matrix observation mechanism. c_matrix numeric matrix covariates true mediator outcome mechanisms. c_matrix contain intercept values NA. sample_size integer value specifying number observations sample. value equal number rows design matrix, X Z. n_cat number categorical values true outcome, M, observed outcome, M* can take.","code":""},{"path":"/reference/EM_function_normalY_XM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EM Algorithm Function for Estimation of the Misclassification Model — EM_function_normalY_XM","text":"EM_function_bernoulliY returns numeric vector updated parameter estimates one iteration EM-algorithm.","code":""},{"path":"/reference/misclassification_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Conditional Probability of Observed Mediator Given True Mediator, for Every Subject — misclassification_prob","title":"Compute Conditional Probability of Observed Mediator Given True Mediator, for Every Subject — misclassification_prob","text":"Compute conditional probability observing mediator \\(M^* \\\\{1, 2 \\}\\) given latent true mediator \\(M \\\\{1, 2 \\}\\) \\(\\frac{\\text{exp}\\{\\gamma_{kj0} + \\gamma_{kjZ} Z_i\\}}{1 + \\text{exp}\\{\\gamma_{kj0} + \\gamma_{kjZ} Z_i\\}}\\) \\(= 1, \\dots,\\) n subjects.","code":""},{"path":"/reference/misclassification_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Conditional Probability of Observed Mediator Given True Mediator, for Every Subject — misclassification_prob","text":"","code":"misclassification_prob(gamma_matrix, z_matrix)"},{"path":"/reference/misclassification_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Conditional Probability of Observed Mediator Given True Mediator, for Every Subject — misclassification_prob","text":"gamma_matrix numeric matrix estimated regression parameters observation mechanism, M* | M (observed mediator, given true mediator) ~ Z (misclassification predictor matrix). Rows matrix correspond parameters M* = 1 observed mediator, dimensions z_matrix. Columns matrix correspond true mediator categories \\(j = 1, \\dots,\\) n_cat. matrix obtained COMMA_EM COMMA_PVW. z_matrix numeric matrix covariates observation mechanism. z_matrix contain intercept.","code":""},{"path":"/reference/misclassification_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Conditional Probability of Observed Mediator Given True Mediator, for Every Subject — misclassification_prob","text":"misclassification_prob returns dataframe containing four columns. first column, Subject, represents subject ID, \\(1\\) n, n sample size, equivalently, number rows z_matrix. second column, M, represents true, latent mediator category \\(M \\\\{1, 2 \\}\\). third column, Mstar, represents observed outcome category \\(M^* \\\\{1, 2 \\}\\). last column, Probability, value equation \\(\\frac{\\text{exp}\\{\\gamma_{kj0} + \\gamma_{kjZ} Z_i\\}}{1 + \\text{exp}\\{\\gamma_{kj0} + \\gamma_{kjZ} Z_i\\}}\\) computed subject, observed mediator category, true, latent mediator category.","code":""},{"path":"/reference/misclassification_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Conditional Probability of Observed Mediator Given True Mediator, for Every Subject — misclassification_prob","text":"","code":"set.seed(123) sample_size <- 1000 cov1 <- rnorm(sample_size) cov2 <- rnorm(sample_size, 1, 2) z_matrix <- matrix(c(cov1, cov2), nrow = sample_size, byrow = FALSE) estimated_gammas <- matrix(c(1, -1, .5, .2, -.6, 1.5), ncol = 2) P_Ystar_Y <- misclassification_prob(estimated_gammas, z_matrix) head(P_Ystar_Y) #>   Subject Y Ystar Probability #> 1       1 1     1   0.7435833 #> 2       2 1     1   0.6660164 #> 3       3 1     1   0.4808373 #> 4       4 1     1   0.7853830 #> 5       5 1     1   0.2352985 #> 6       6 1     1   0.6954044"},{"path":"/reference/pistar_compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Conditional Probability of Each Observed Outcome Given Each True Outcome, for Every Subject — pistar_compute","title":"Compute Conditional Probability of Each Observed Outcome Given Each True Outcome, for Every Subject — pistar_compute","text":"Compute Conditional Probability Observed Outcome Given True Outcome, Every Subject","code":""},{"path":"/reference/pistar_compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Conditional Probability of Each Observed Outcome Given Each True Outcome, for Every Subject — pistar_compute","text":"","code":"pistar_compute(gamma, Z, n, n_cat)"},{"path":"/reference/pistar_compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Conditional Probability of Each Observed Outcome Given Each True Outcome, for Every Subject — pistar_compute","text":"gamma numeric matrix regression parameters observed outcome mechanism, Y* | Y (observed outcome, given true outcome) ~ Z (misclassification predictor matrix). Rows matrix correspond parameters Y* = 1 observed outcome, dimensions Z. Columns matrix correspond true outcome categories \\(j = 1, \\dots,\\) n_cat. Z numeric design matrix. n integer value specifying number observations sample. value equal number rows design matrix, Z. n_cat number categorical values true outcome, Y, observed outcome, Y* can take.","code":""},{"path":"/reference/pistar_compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Conditional Probability of Each Observed Outcome Given Each True Outcome, for Every Subject — pistar_compute","text":"pistar_compute returns matrix conditional probabilities, \\(P(Y_i^* = k | Y_i = j, Z_i) = \\frac{\\text{exp}\\{\\gamma_{kj0} + \\gamma_{kjZ} Z_i\\}}{1 + \\text{exp}\\{\\gamma_{kj0} + \\gamma_{kjZ} Z_i\\}}\\) \\(= 1, \\dots,\\)  n subjects. Rows matrix correspond subject observed outcome. Specifically, probability subject \\(\\) observed category $1$ occurs row \\(\\). probability subject \\(\\) observed category $2$ occurs row \\(+\\)  n. Columns matrix correspond true outcome categories \\(j = 1, \\dots,\\)  n_cat.","code":""},{"path":"/reference/pi_compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Probability of Each True Outcome, for Every Subject — pi_compute","title":"Compute Probability of Each True Outcome, for Every Subject — pi_compute","text":"Compute Probability True Outcome, Every Subject","code":""},{"path":"/reference/pi_compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Probability of Each True Outcome, for Every Subject — pi_compute","text":"","code":"pi_compute(beta, X, n, n_cat)"},{"path":"/reference/pi_compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Probability of Each True Outcome, for Every Subject — pi_compute","text":"beta numeric column matrix regression parameters Y (true outcome) ~ X (predictor matrix interest). X numeric design matrix. n integer value specifying number observations sample. value equal number rows design matrix, X. n_cat number categorical values true outcome, Y, can take.","code":""},{"path":"/reference/pi_compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Probability of Each True Outcome, for Every Subject — pi_compute","text":"pi_compute returns matrix probabilities, \\(P(Y_i = j | X_i) = \\frac{\\exp(X_i \\beta)}{1 + \\exp(X_i \\beta)}\\) \\(= 1, \\dots,\\)  n subjects. Rows matrix correspond subject. Columns matrix correspond true outcome categories \\(j = 1, \\dots,\\)  n_cat.","code":""},{"path":"/reference/sum_every_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum Every ","title":"Sum Every ","text":"Sum Every \"n\"th Element","code":""},{"path":"/reference/sum_every_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum Every ","text":"","code":"sum_every_n(x, n)"},{"path":"/reference/sum_every_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum Every ","text":"x numeric vector sum n numeric value specifying distance reference index next index summed","code":""},{"path":"/reference/sum_every_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum Every ","text":"sum_every_n returns vector sums every n^th element vector x.","code":""},{"path":"/reference/sum_every_n1.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum Every ","title":"Sum Every ","text":"Sum Every \"n\"th Element, add 1","code":""},{"path":"/reference/sum_every_n1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum Every ","text":"","code":"sum_every_n1(x, n)"},{"path":"/reference/sum_every_n1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum Every ","text":"x numeric vector sum n numeric value specifying distance reference index next index summed","code":""},{"path":"/reference/sum_every_n1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum Every ","text":"sum_every_n1 returns vector sums every n^th element vector x, plus 1.","code":""},{"path":"/reference/true_classification_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Probability of Each True Mediator, for Every Subject — true_classification_prob","title":"Compute Probability of Each True Mediator, for Every Subject — true_classification_prob","text":"Compute probability latent true mediator \\(M \\\\{1, 2 \\}\\) \\(P(M_i = j | X_i) = \\frac{\\exp(X_i \\beta)}{1 + \\exp(X_i \\beta)}\\) \\(= 1, \\dots,\\) n subjects.","code":""},{"path":"/reference/true_classification_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Probability of Each True Mediator, for Every Subject — true_classification_prob","text":"","code":"true_classification_prob(beta_matrix, x_matrix)"},{"path":"/reference/true_classification_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Probability of Each True Mediator, for Every Subject — true_classification_prob","text":"beta_matrix numeric column matrix estimated regression parameters true mediator mechanism, M (true mediator) ~ X (predictor matrix interest), obtained COMMA_EM COMMA_PVW. x_matrix numeric matrix covariates true mediator mechanism. x_matrix contain intercept.","code":""},{"path":"/reference/true_classification_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Probability of Each True Mediator, for Every Subject — true_classification_prob","text":"true_classification_prob returns dataframe containing three columns. first column, Subject, represents subject ID, \\(1\\) n, n sample size, equivalently, number rows x_matrix. second column, M, represents true, latent mediator category \\(Y \\\\{1, 2 \\}\\). last column, Probability, value equation \\(P(Y_i = j | X_i) = \\frac{\\exp(X_i \\beta)}{1 + \\exp(X_i \\beta)}\\) computed subject true, latent mediator category.","code":""},{"path":"/reference/true_classification_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Probability of Each True Mediator, for Every Subject — true_classification_prob","text":"","code":"set.seed(123) sample_size <- 1000 cov1 <- rnorm(sample_size) cov2 <- rnorm(sample_size, 1, 2) x_matrix <- matrix(c(cov1, cov2), nrow = sample_size, byrow = FALSE) estimated_betas <- matrix(c(1, -1, .5), ncol = 1) P_Y <- true_classification_prob(estimated_betas, x_matrix) head(P_Y) #>   Subject Y Probability #> 1       1 1   0.7435833 #> 2       2 1   0.6660164 #> 3       3 1   0.4808373 #> 4       4 1   0.7853830 #> 5       5 1   0.2352985 #> 6       6 1   0.6954044"},{"path":"/reference/w_m_binaryY.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_binaryY","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_binaryY","text":"Note function used Binary outcome models.","code":""},{"path":"/reference/w_m_binaryY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_binaryY","text":"","code":"w_m_binaryY(   mstar_matrix,   outcome_matrix,   pistar_matrix,   pi_matrix,   p_yi_m0,   p_yi_m1,   sample_size,   n_cat )"},{"path":"/reference/w_m_binaryY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_binaryY","text":"mstar_matrix numeric matrix indicator variables (0, 1) observed mediator M*. Rows matrix correspond subject. Columns matrix correspond observed mediator category. row contain exactly one 0 entry exactly one 1 entry. outcome_matrix numeric matrix indicator variables (0, 1) observed outcome Y. Rows matrix correspond subject. Columns matrix correspond observed outcome category. row contain exactly one 0 entry exactly one 1 entry. pistar_matrix numeric matrix conditional probabilities obtained internal function pistar_compute. Rows matrix correspond subject observed mediator category. Columns matrix correspond true, latent mediator category. pi_matrix numeric matrix probabilities obtained internal function pi_compute. Rows matrix correspond subject. Columns matrix correspond true, latent mediator category. p_yi_m0 numeric vector outcome probabilities computed assuming true mediator value 0. p_yi_m1 numeric vector outcome probabilities computed assuming true mediator value 1. sample_size integer value specifying number observations sample. value equal number rows observed mediator matrix, mstar_matrix. n_cat number categorical values true outcome, M, observed outcome, M*, can take.","code":""},{"path":"/reference/w_m_binaryY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_binaryY","text":"w_m_binaryY returns matrix E-step weights EM-algorithm. Rows matrix correspond subject. Columns matrix correspond true mediator categories \\(j = 1, \\dots,\\)  n_cat.","code":""},{"path":"/reference/w_m_normalY.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_normalY","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_normalY","text":"Note function used Normal outcome models.","code":""},{"path":"/reference/w_m_normalY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_normalY","text":"","code":"w_m_normalY(   mstar_matrix,   pistar_matrix,   pi_matrix,   p_yi_m0,   p_yi_m1,   sample_size,   n_cat )"},{"path":"/reference/w_m_normalY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_normalY","text":"mstar_matrix numeric matrix indicator variables (0, 1) observed mediator M*. Rows matrix correspond subject. Columns matrix correspond observed mediator category. row contain exactly one 0 entry exactly one 1 entry. pistar_matrix numeric matrix conditional probabilities obtained internal function pistar_compute. Rows matrix correspond subject observed mediator category. Columns matrix correspond true, latent mediator category. pi_matrix numeric matrix probabilities obtained internal function pi_compute. Rows matrix correspond subject. Columns matrix correspond true, latent mediator category. p_yi_m0 numeric vector Normal outcome likelihoods computed assuming true mediator value 0. p_yi_m1 numeric vector Normal outcome likelihoods computed assuming true mediator value 1. sample_size integer value specifying number observations sample. value equal number rows observed mediator matrix, mstar_matrix. n_cat number categorical values true outcome, M, observed outcome, M*, can take. outcome_matrix numeric matrix indicator variables (0, 1) observed outcome Y. Rows matrix correspond subject. Columns matrix correspond observed outcome category. row contain exactly one 0 entry exactly one 1 entry.","code":""},{"path":"/reference/w_m_normalY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute E-step for Binary Mediator Misclassification Model Estimated With the EM Algorithm — w_m_normalY","text":"w_m_normalY returns matrix E-step weights EM-algorithm. Rows matrix correspond subject. Columns matrix correspond true mediator categories \\(j = 1, \\dots,\\)  n_cat.","code":""}]
